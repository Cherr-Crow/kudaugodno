import logging

from drf_spectacular.utils import extend_schema, extend_schema_view
from rest_framework.exceptions import NotFound
from rest_framework.viewsets import ReadOnlyModelViewSet

from vzhuh.models import Vzhuh
from vzhuh.serializers import VzhuhSerializer


logger = logging.getLogger(__name__)

vzhuh_settings = {
    "name": "–í–∂—É—Ö–∏",
    "description": "–°–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º",
}


@extend_schema_view(
    list=extend_schema(summary="–°–ø–∏—Å–æ–∫ –í–∂—É—Ö–æ–≤", tags=["–í–∂—É—Ö–∏"], operation_id="vzhuh_list"),
    retrieve=extend_schema(summary="–î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –í–∂—É—Ö–∞", tags=["–í–∂—É—Ö–∏"], operation_id="vzhuh_detail"),
)
class VzhuhViewSet(ReadOnlyModelViewSet):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–∂—É—Ö–∞ (—Ç–æ–ª—å–∫–æ GET)."""

    queryset = Vzhuh.objects.filter(is_published=True)
    serializer_class = VzhuhSerializer

    def get_object(self):
        try:
            obj = super().get_object()
            logger.debug(f"Retrieved object: {obj}")
            return obj
        except Exception as e:
            logger.error(f"Exception in get_object: {e}")
            raise NotFound(detail="–£–ø—Å! –¢–∞–∫–æ–≥–æ –í–∂—É—Ö–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ü§∑‚Äç‚ôÄÔ∏è", code=404)
